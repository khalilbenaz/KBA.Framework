syntax = "proto3";

option csharp_namespace = "KBA.Framework.Grpc.Identity";

package identity;

// Service de gestion d'identité et authentification
service IdentityService {
  // Valide un token JWT et retourne les informations utilisateur
  rpc ValidateToken (ValidateTokenRequest) returns (ValidateTokenResponse);
  
  // Récupère les informations d'un utilisateur
  rpc GetUser (GetUserRequest) returns (GetUserResponse);
  
  // Vérifie si un utilisateur existe
  rpc UserExists (UserExistsRequest) returns (UserExistsResponse);
  
  // Récupère les rôles d'un utilisateur
  rpc GetUserRoles (GetUserRolesRequest) returns (GetUserRolesResponse);
}

// Messages pour ValidateToken
message ValidateTokenRequest {
  string token = 1;
  string correlation_id = 2;
}

message ValidateTokenResponse {
  bool is_valid = 1;
  string user_id = 2;
  string email = 3;
  repeated string roles = 4;
  string tenant_id = 5;
}

// Messages pour GetUser
message GetUserRequest {
  string user_id = 1;
  string correlation_id = 2;
}

message GetUserResponse {
  bool success = 1;
  User user = 2;
}

message User {
  string id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string tenant_id = 5;
  bool is_active = 6;
  repeated string roles = 7;
  string created_at = 8;
}

// Messages pour UserExists
message UserExistsRequest {
  string user_id = 1;
  string correlation_id = 2;
}

message UserExistsResponse {
  bool exists = 1;
}

// Messages pour GetUserRoles
message GetUserRolesRequest {
  string user_id = 1;
  string correlation_id = 2;
}

message GetUserRolesResponse {
  repeated string roles = 1;
}
